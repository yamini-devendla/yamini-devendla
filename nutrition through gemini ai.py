# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D19mVy8MKV5QnFt4k8T0SaW1v_hAFelb
"""



# Install necessary libraries
!pip install transformers
!pip install pandas

# Importing necessary libraries
from transformers import pipeline
import pandas as pd

# Function to get nutritional info using Hugging Face's pre-trained model
def get_nutritional_info_huggingface(food_item):
    # Use a pre-trained question answering model from Hugging Face
    model_name = "deepset/roberta-base-squad2"  # Model suitable for question answering
    nlp_model = pipeline('question-answering', model=model_name)

    # Define a hypothetical context related to the food item (you can customize context more)
    context = f"{food_item} is a healthy food that is rich in nutrients. It contains vitamins, minerals, fiber, and antioxidants. An average serving contains around 100 calories, some carbohydrates, protein, and very little fat."

    # Asking the model a question about the food item
    result = nlp_model(question=f"What are the nutrients in {food_item}?", context=context)

    return result['answer']

# Function to suggest diet plans based on user's preference
def suggest_diet(preference):
    diet_plan = {
        'vegetarian': ["Breakfast: Oatmeal with fruits",
                       "Lunch: Veggie salad with quinoa",
                       "Dinner: Lentil stew with brown rice"],
        'vegan': ["Breakfast: Smoothie with almond milk and berries",
                  "Lunch: Chickpea salad",
                  "Dinner: Tofu stir-fry with vegetables"],
        'low-carb': ["Breakfast: Scrambled eggs with avocado",
                     "Lunch: Grilled chicken with leafy greens",
                     "Dinner: Zucchini noodles with pesto sauce"],
        'high-protein': ["Breakfast: Greek yogurt with almonds",
                         "Lunch: Grilled salmon with asparagus",
                         "Dinner: Chicken breast with broccoli"]
    }

    return diet_plan.get(preference.lower(), ["Diet plan not found for this preference."])

# Main NutriAI bot to get food info and suggest a diet plan
def nutriAI_bot(food_item, preference):
    # Get nutritional info from Hugging Face model
    nutrients = get_nutritional_info_huggingface(food_item)

    # Suggest diet plan based on preference
    diet_plan = suggest_diet(preference)

    # Display results in a formatted way
    output_text = f"\nNutritional Information for {food_item}:\n{nutrients}\n"
    output_text += f"\nSuggested Diet Plan for {preference.capitalize()}:\n"
    for item in diet_plan:
        output_text += f"- {item}\n"

    return output_text

# Simple console input/output
def main():
    # Ask for user input
    food_item = input("Enter a food item (e.g., Apple): ")
    preference = input("Enter your diet preference (vegetarian, vegan, low-carb, high-protein): ")

    # Get results from NutriAI bot
    result = nutriAI_bot(food_item, preference)

    # Print the results
    print(result)

# Run the main function
if __name__ == "__main__":
    main()